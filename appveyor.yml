environment:
  matrix:
  - TARGET: x86_64-pc-windows-gnu
    MSYS_BITS: 64
  - TARGET: i686-pc-windows-gnu
    MSYS_BITS: 32
  - TARGET: i686-pc-windows-gnu
    MINGW: true
  - TARGET: x86_64-pc-windows-msvc
  - TARGET: i686-pc-windows-msvc
install:
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-${env:TARGET}.exe"
  - rust-nightly-%TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - set PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - if defined MSYS_BITS set PATH=%PATH%;C:\msys64\mingw%MSYS_BITS%\bin;C:\msys64\usr\bin
  - if defined MINGW SET PATH=%PATH%;C:\MinGW\bin
# Workaround for CMake not wanting sh.exe on PATH for MinGW. See http://help.appveyor.com/discussions/problems/3193-cmake-building-for-mingw-issue-with-git-shexe
  - if defined MINGW set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - if defined MINGW set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if defined MINGW mingw-get install libz
  - rustc -V
  - cargo -V

build: false

test_script:
  - cargo test --target %TARGET%
  - cargo run --manifest-path systest/Cargo.toml --target %TARGET%
